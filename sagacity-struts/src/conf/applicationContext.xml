<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
	<bean id="configBean"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:applicationContext.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据源的配置 //-->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${sagacity.jdbc.driverClassName}" />
		<property name="url" value="${sagacity.jdbc.url}" />
		<property name="username" value="${sagacity.jdbc.username}" />
		<property name="password" value="${sagacity.jdbc.password}" />
	</bean>


	<!-- 通过JNDI 使用应用服务器 的Connection Pool-->
	<!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="papermanager"/>
		</bean>-->

	<!-- jbpm大字段类型定义 -->
	<bean id="jbpmTypes"
		class="org.springframework.orm.hibernate3.TypeDefinitionBean">
		<property name="typeName" value="string_max" />
		<property name="typeClass"
			value="org.jbpm.db.hibernate.StringMax" />
	</bean>

	<!-- 以下是： 处理Blob类型的特殊声明 //-->
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
		lazy-init="true" />
	<bean id="lobHandler"
		class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor">
			<ref local="nativeJdbcExtractor" />
		</property>
	</bean>

	<!-- Hibernate SessionFactory定义 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 为处理Blob类型字段的句柄声明 //-->
		<property name="lobHandler" ref="lobHandler" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="jdbc.fetch_size">${jdbc.fetch_size}</prop>
				<prop key="jdbc.batch_size">${jdbc.batch_size}</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">
					true
				</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>
					classpath:/org/sagacity/lazyworker/domain/model
				</value>
				<value>classpath*:/org/jbpm/**/*.hbm.xml</value>
			</list>
		</property>
		<property name="typeDefinitions">
			<ref bean="jbpmTypes" />
		</property>
	</bean>

	<!-- helper for reading jBPM process definitions -->
	<bean id="simpleWorkflow"
		class="org.springmodules.workflow.jbpm31.definition.ProcessDefinitionFactoryBean">
		<property name="definitionLocation"
			value="classpath:jpdl/processdefinition.xml" />
	</bean>
	
	<bean id="jbpmConfiguration"
		class="org.springmodules.workflow.jbpm31.LocalJbpmConfigurationFactoryBean">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="configuration" value="classpath:jbpm.cfg.xml" />
		<property name="processDefinitions">
			<list>
				<!-- add new processDefinitions here -->
				<ref local="simpleWorkflow" />
			</list>
		</property>
		<property name="createSchema" value="false" />
	</bean>

	<bean id="jbpmTemplate"
		class="org.springmodules.workflow.jbpm31.JbpmTemplate">
		<property name="jbpmConfiguration" ref="jbpmConfiguration" />
	</bean>

	<!-- DAO 的IoC配置//-->
	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="cacheQueries">
			<value>false</value>
		</property>
	</bean>

	<!-- 事务处理的AOP配置 //-->
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(* org.sagacity..*Service.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<!-- 事务AOP处理的方法和事务类型定义 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="search*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="write*" propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务管理器定义 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- EhCache Manager -->
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:ehcache.xml</value>
		</property>
	</bean>

	<!-- 系统安全Acegi配置定义 -->
	<!-- 
		<import
		resource="applicationContext-acegi.xml" />
	-->
	<!-- 项目管理类定义 -->
	<import resource="classpath:applicationContext-epm.xml" />
</beans>
